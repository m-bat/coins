 .ident "Coins Compiler version: coins-1.4.3.1 + BackEnd-1.0"
/* JavaCG for target:x86 convention:cygwin */
	.text
	.align	1
_string.8:
	.byte	37
	.byte	100
	.byte	10
	.byte	0
	.align	1
_string.18:
	.byte	37
	.byte	100
	.byte	32
	.byte	37
	.byte	108
	.byte	117
	.byte	10
	.byte	0
	.align	1
_string.23:
	.byte	37
	.byte	100
	.byte	32
	.byte	37
	.byte	108
	.byte	100
	.byte	10
	.byte	0
	.align	1
_string.25:
	.byte	37
	.byte	100
	.byte	32
	.byte	37
	.byte	117
	.byte	10
	.byte	0

	.align	4
	.global	_main
_main:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$4,%esp
	flds	.LC1
	fstps	-4(%ebp)
	movl	$-1294967296,%eax
	movl	$-10,%eax
	movl	$-1294967295,%eax
	movl	$-11,%eax
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$45776
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$45776
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$-1
	pushl	$4
	pushl	$_string.23
	call	_printf
	leal	12(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.25
	call	_printf
	leal	12(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$8
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$4
	pushl	$_string.8
	call	_printf
	leal	8(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$45776
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$45776
	pushl	$4
	pushl	$_string.18
	call	_printf
	leal	12(%esp),%esp
	pushl	$-1
	pushl	$4
	pushl	$_string.23
	call	_printf
	leal	12(%esp),%esp
	pushl	$65535
	pushl	$4
	pushl	$_string.25
	call	_printf
	leal	12(%esp),%esp
	movl	$0,%eax
	leave
	ret

	.align	4
.LC1:
	.long	0x3fc00000 /* 1.5 */
