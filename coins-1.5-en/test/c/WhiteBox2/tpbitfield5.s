 .ident "Coins Compiler version: coins-1.4.3.1 + BackEnd-1.0"
/* JavaCG for target:x86 convention:cygwin */
	.text
	.align	1
_string.17:
	.byte	117
	.byte	49
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	10
	.byte	0
	.align	1
_string.19:
	.byte	117
	.byte	50
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	10
	.byte	0
	.align	1
_string.21:
	.byte	117
	.byte	51
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	10
	.byte	0
	.align	1
_string.23:
	.byte	117
	.byte	52
	.byte	32
	.byte	61
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	37
	.byte	120
	.byte	32
	.byte	10
	.byte	0
	.align	1
_string.25:
	.byte	115
	.byte	105
	.byte	122
	.byte	101
	.byte	111
	.byte	102
	.byte	32
	.byte	98
	.byte	105
	.byte	116
	.byte	70
	.byte	105
	.byte	101
	.byte	108
	.byte	100
	.byte	32
	.byte	49
	.byte	61
	.byte	37
	.byte	100
	.byte	32
	.byte	50
	.byte	61
	.byte	37
	.byte	100
	.byte	32
	.byte	51
	.byte	61
	.byte	37
	.byte	100
	.byte	32
	.byte	52
	.byte	61
	.byte	37
	.byte	100
	.byte	32
	.byte	10
	.byte	0

	.align	4
	.global	_main
_main:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$36,%esp
	movb	$0,-4(%ebp)
	movb	$0,-8(%ebp)
	movb	$0,-7(%ebp)
	movl	$0,-20(%ebp)
	movl	$0,-16(%ebp)
	movl	$0,-12(%ebp)
	movl	$0,-36(%ebp)
	movl	$0,-32(%ebp)
	movl	$0,-28(%ebp)
	movl	$0,-24(%ebp)
	leal	-4(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-2,%eax
	orl	$1,%eax
	movl	%eax,(%ecx)
	leal	-4(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-3,%eax
	orl	$2,%eax
	movl	%eax,(%ecx)
	leal	-8(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-2,%eax
	orl	$1,%eax
	movl	%eax,(%ecx)
	movb	$1,-7(%ebp)
	leal	-8(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-7,%eax
	orl	$2,%eax
	movl	%eax,(%ecx)
	leal	-20(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-257,%eax
	orl	$256,%eax
	movl	%eax,(%ecx)
	leal	-20(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-1537,%eax
	orl	$512,%eax
	movl	%eax,(%ecx)
	movb	$1,-18(%ebp)
	leal	-36(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-2,%eax
	orl	$1,%eax
	movl	%eax,(%ecx)
	leal	-36(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-3,%eax
	orl	$2,%eax
	movl	%eax,(%ecx)
	movb	$1,-32(%ebp)
	leal	-28(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-2,%eax
	orl	$1,%eax
	movl	%eax,(%ecx)
	leal	-28(%ebp),%ecx
	movl	(%ecx),%eax
	andl	$-3,%eax
	orl	$2,%eax
	movl	%eax,(%ecx)
	movb	$1,-24(%ebp)
	movzbl	-4(%ebp),%eax
	pushl	%eax
	pushl	$_string.17
	call	_printf
	leal	8(%esp),%esp
	movzbl	-7(%ebp),%eax
	pushl	%eax
	movzbl	-8(%ebp),%eax
	pushl	%eax
	pushl	$_string.19
	call	_printf
	leal	12(%esp),%esp
	pushl	-12(%ebp)
	pushl	-16(%ebp)
	pushl	-20(%ebp)
	pushl	$_string.21
	call	_printf
	leal	16(%esp),%esp
	pushl	-24(%ebp)
	pushl	-28(%ebp)
	pushl	-32(%ebp)
	pushl	-36(%ebp)
	pushl	$_string.23
	call	_printf
	leal	20(%esp),%esp
	pushl	$16
	pushl	$4
	pushl	$4
	pushl	$4
	pushl	$_string.25
	call	_printf
	leal	20(%esp),%esp
.L3:
	leave
	ret

